<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="kr.spring.letter.dao.LetterMapper">  
	<!-- 보낸쪽지함 인서트 -->
	<insert id="insertSend" parameterType="letterVO">
		INSERT INTO letter_send 
			(lt_num,
			 lt_title,
			 lt_sender_num,
			 lt_receiver_num,
			 lt_content,
			 lt_uploadfile1,
			 lt_uploadfile2,
			 lt_filename1,
			 lt_filename2,
			 lt_sender_id,
			 lt_receiver_id,
			 lt_reference_id)
		 VALUES 
		 	(#{lt_num},
		 	 #{lt_title},
		 	 #{lt_sender_num},
		 	 #{lt_receiver_num},
		 	 #{lt_content},
		 	 #{lt_uploadfile1},
		 	 #{lt_uploadfile2},
		 	 #{lt_filename1},
		 	 #{lt_filename2},
		 	 #{lt_sender_id},
		 	 #{lt_receiver_id},
		 	 #{lt_reference_id})
	</insert>
	
	<!-- 받은쪽지함 인서트 -->
	<insert id="insertReceive" parameterType="letterVO">
		INSERT INTO letter_receive
			(lt_num,
			 lt_title,
			 lt_sender_num,
			 lt_receiver_num,
			 lt_content,
			 lt_uploadfile1,
			 lt_uploadfile2,
			 lt_filename1,
			 lt_filename2,
			 lt_sender_id,
			 lt_receiver_id,
			 <if test="lt_sender_id == lt_receiver_id">
			 lt_read,
			 </if>
			 snum
			 )
		 VALUES 
		 	(rec_seq.nextval,
		 	 #{lt_title},
		 	 #{lt_sender_num},
		 	 #{lt_receiver_num},
		 	 #{lt_content},
		 	 #{lt_uploadfile1},
		 	 #{lt_uploadfile2},
		 	 #{lt_filename1},
		 	 #{lt_filename2},
		 	 #{lt_sender_id},
		 	 #{lt_receiver_id},
		 	 <if test="lt_sender_id == lt_receiver_id">
			 1,
			 </if>
		 	 #{snum})
	</insert>
	
	<!-- 전체쪽지함 카운트 -->
	<select id="selectAllRowCount" parameterType="map" resultType="integer">
		SELECT
			COUNT(*)
		FROM
		   (SELECT 
		   		lt_sender_id,
		   		(SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id = SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1))) || '('|| SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1)) || ')' AS lt_receiver_id,
		   		lt_title,
		   		lt_content,
		   		lt_delete
		    FROM
		    	letter_send s
		    WHERE
		    	lt_sender_num=#{mem_num} AND lt_delete=0
		    
		    UNION ALL 
		    
		   	SELECT
		   		(SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id =r.lt_sender_id) || '('|| lt_sender_id || ')' AS lt_sender_id,
		   		lt_receiver_id,
		   		lt_title,
		   		lt_content,
		   		lt_delete
		    FROM
		    	letter_receive r
		    WHERE
		    	lt_receiver_num=#{mem_num} AND lt_sender_num!=#{mem_num} AND lt_delete=0)
	    	<where>
			<if test="keyword != null and keyword != ''">
				<if test="keyfield == 1">
					lt_sender_id LIKE '%' || #{keyword} || '%'
				</if>

				<if test="keyfield == 2">
					lt_receiver_id LIKE '%' || #{keyword} || '%'
				</if>

				<if test="keyfield == 3">
					lt_title LIKE '%' || #{keyword} || '%'
				</if>

				<if test="keyfield == 4">
					lt_content LIKE '%' || #{keyword} || '%'
				</if>
			</if>
		</where>
	</select>
	
	<!-- 전체쪽지함 리스트 -->
	<select id="selectAllList" parameterType="map" resultType="letterVO">
		SELECT 
			*
		FROM
			(SELECT
				rownum rnum,
				a.*
			FROM
				(SELECT
				   *
				 FROM
			   		(SELECT
			   			lt_num AS lt_num,
			   			lt_sender_num,
			   			lt_receiver_num,
			   			<![CDATA[
			   			REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
			   			]]>
			            lt_date,
			            lt_sender_id,
		      			(SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id = SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1))) || '('|| SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1)) || ')' AS lt_receiver_id,
				        lt_content,
				        lt_important,
				        lt_read,
				        lt_delete
			    	FROM
			    		letter_send s
			     	WHERE
			     		lt_sender_num=#{mem_num} AND lt_delete=0
			     		
			      	UNION ALL 
			      	
			  		SELECT
			  			snum AS lt_num,
			  			lt_sender_num,
			  			TO_CHAR(lt_receiver_num) AS lt_receiver_num,
			  			<![CDATA[
			  			REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
			  			]]>
			        	lt_date,
				        (SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id =r.lt_sender_id) || '('|| lt_sender_id || ')' AS lt_sender_id,
				        lt_receiver_id,
				        lt_content,
				        lt_important,
				        lt_read,
				        lt_delete
			  		FROM
			  			letter_receive r
			  		WHERE
			  			lt_receiver_num=#{mem_num} AND lt_sender_num!=#{mem_num} AND lt_delete=0) 
			  	<where>
					<if test="keyword != null and keyword != ''">
						<if test="keyfield == 1">
							lt_sender_id LIKE '%' || #{keyword} || '%'
						</if>
		
						<if test="keyfield == 2">
							lt_receiver_id LIKE '%' || #{keyword} || '%'
						</if>
		
						<if test="keyfield == 3">
							lt_title LIKE '%' || #{keyword} || '%'
						</if>
		
						<if test="keyfield == 4">
							lt_content LIKE '%' || #{keyword} || '%'
						</if>
					</if>
				</where>
			   ORDER BY lt_date DESC)a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]> 
	</select>
	
	<!-- 전체쪽지함 이전/다음글 -->
	<select id="selectAllNP" parameterType="map" resultType="nextPrevVO">
		WITH tta AS
		(
          SELECT
            *
           FROM
             (SELECT
              	lt_num AS lt_num,
                <![CDATA[
	  			REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
	  			]]>
                lt_date,
                lt_sender_id,
                (SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id = SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1))) || '('|| SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1)) || ')' AS lt_receiver_id,
                lt_delete,
                lt_read
              FROM
                letter_send s
              WHERE
                lt_sender_num=#{mem_num} AND lt_delete=0
                
              UNION ALL 
              
              SELECT
                snum AS lt_num,
                <![CDATA[
	  			REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
	  			]]>
                lt_date,
                (SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id =r.lt_sender_id) || '('|| lt_sender_id || ')' AS lt_sender_id,
                lt_receiver_id,
                lt_delete,
                lt_read
              FROM
                letter_receive r
              WHERE
                lt_receiver_num=#{mem_num} AND lt_sender_num!=#{mem_num} AND lt_delete=0) 
          )
               
           SELECT * FROM(
               SELECT
	               lt_num,
	               LAG(lt_num,1) OVER(ORDER BY lt_num) prev_num,
	               LAG(lt_title,1) OVER(ORDER BY lt_num) prev_title,
	               LAG(lt_sender_id,1) OVER(ORDER BY lt_num) prev_send_id,
	               LAG(lt_receiver_id,1) OVER(ORDER BY lt_num) prev_receiver_id,
	               LAG(lt_date,1) OVER(ORDER BY lt_num) prev_date,
	               LAG(lt_read,1) OVER(ORDER BY lt_num) prev_read,
	               LEAD(lt_num,1) OVER(ORDER BY lt_num) next_num,
	               LEAD(lt_title,1) OVER(ORDER BY lt_num) next_title,
	               LEAD(lt_sender_id,1) OVER(ORDER BY lt_num) next_send_id,
	               LEAD(lt_receiver_id,1) OVER(ORDER BY lt_num) next_receiver_id,
	               LEAD(lt_date,1) OVER(ORDER BY lt_num) next_date,
	               LEAD(lt_read,1) OVER(ORDER BY lt_num) next_read
               FROM tta 
               )
           WHERE lt_num=#{lt_num}
	</select>
	
	<!-- 받은쪽지함 카운트 -->
	<select id="selectRecRowCount" parameterType="map" resultType="integer">
		SELECT
		  COUNT(*)
		FROM
		  letter_receive l JOIN member_detail m ON mem_num = lt_sender_num
		WHERE
		  lt_receiver_num=#{mem_num} AND lt_delete=0
	</select>
	
	<!-- 받은쪽지함 리스트 -->
	<select id="selectRecList" parameterType="map" resultType="letterVO">
		SELECT 
			*
		FROM
			(SELECT
				rownum rnum,
				a.*
			FROM
		  		(SELECT
		  			snum AS lt_num,
		  			lt_sender_num,
		  			lt_receiver_num,
                    <![CDATA[
			  		REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
			  		]]>
		        	lt_date,
			        lt_sender_id,
			        lt_receiver_id,
			        lt_content,
                    mem_name,
                    lt_important,
                    lt_read,
                    lt_delete
		  		FROM
		  			letter_receive l JOIN member_detail m on mem_num=lt_sender_num
		  		WHERE
		  			lt_receiver_num=#{mem_num} AND lt_delete=0
		  		ORDER BY lt_date DESC)a)
		
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]> 
	</select>
	
	<!-- 받은쪽지함 이전/다음글 -->
	<select id="selectRecNP" parameterType="map" resultType="nextPrevVO">
		WITH tta AS
		(
         	SELECT
			  snum AS lt_num,   
	          <![CDATA[
	  		  REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
	  		  ]]>
	          lt_date,
	          lt_sender_id,
	          lt_receiver_id,
	          mem_name,
	          lt_delete,
	          lt_read
			FROM
			  letter_receive l JOIN member_detail m ON mem_num = lt_sender_num
			WHERE
			  lt_receiver_num=#{mem_num} AND lt_delete=0
	          )
	               
	           SELECT * FROM(
	               SELECT
		               lt_num,
		               LAG(lt_num,1) OVER(ORDER BY lt_num) prev_num,
		               LAG(lt_title,1) OVER(ORDER BY lt_num) prev_title,
		               LAG(lt_sender_id,1) OVER(ORDER BY lt_num) prev_send_id,
		               LAG(lt_receiver_id,1) OVER(ORDER BY lt_num) prev_receiver_id,
	                   LAG(mem_name,1) OVER(ORDER BY lt_num) prev_mem_name,
	                   LAG(lt_date,1) OVER(ORDER BY lt_num) prev_date,
	               	   LAG(lt_read,1) OVER(ORDER BY lt_num) prev_read,
		               LEAD(lt_num,1) OVER(ORDER BY lt_num) next_num,
		               LEAD(lt_title,1) OVER(ORDER BY lt_num) next_title,
		               LEAD(lt_sender_id,1) OVER(ORDER BY lt_num) next_send_id,
		               LEAD(lt_receiver_id,1) OVER(ORDER BY lt_num) next_receiver_id,
	                   LEAD(mem_name,1) OVER(ORDER BY lt_num) next_mem_name,
	                   LEAD(lt_date,1) OVER(ORDER BY lt_num) next_date,
	                   LEAD(lt_read,1) OVER(ORDER BY lt_num) next_read
	               FROM tta 
	               )
           WHERE lt_num=#{lt_num}
	</select>
	
	<!-- 보낸쪽지함 카운트 -->
	<select id="selectSendRowCount" parameterType="map" resultType="integer">
		SELECT
		  COUNT(*)
		FROM
		  letter_send
		WHERE
		  lt_sender_num=#{mem_num} AND lt_delete=0
	</select>
	
	<!-- 보낸쪽지함 리스트 -->
	<select id="selectSendList" parameterType="map" resultType="letterVO">
		SELECT 
			*
		FROM
			(SELECT
				rownum rnum,
				a.*
			FROM
		  		(SELECT
		  			lt_num,
		  			lt_sender_num,
		  			lt_receiver_num,
                    <![CDATA[
			  		REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
			  		]]>
		        	lt_date,
			        lt_sender_id,
			        (SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id = SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1))) || '('|| SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1)) || ')' AS lt_receiver_id,
			        lt_content,
			        lt_important,
			        lt_read,
			        lt_delete
		  		FROM
		  			letter_send s
		  		WHERE
		  			lt_sender_num=#{mem_num} AND lt_delete=0
		  		ORDER BY lt_date DESC)a)
		
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]> 
	</select>
	
	<!-- 보낸쪽지함 이전/다음글 -->
	<select id="selectSendNP" parameterType="map" resultType="nextPrevVO">
		WITH tta AS
			(
			SELECT
	  			lt_num,
	  			lt_sender_num,
	  			lt_receiver_num,
		  		<![CDATA[
		  		REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
		  		]]>
	        	lt_date,
		        lt_sender_id,
		        (SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id = SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1))) || '('|| SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1)) || ')' AS lt_receiver_id,
		        lt_content,
		        lt_delete,
		        lt_read
	  		FROM
	  			letter_send s
	  		WHERE
	  			lt_sender_num=#{mem_num} AND lt_delete=0
	  		)
	  		
         SELECT * FROM
         	(
             SELECT
              lt_num,
              LAG(lt_num,1) OVER(ORDER BY lt_num) prev_num,
              LAG(lt_title,1) OVER(ORDER BY lt_num) prev_title,
              LAG(lt_sender_id,1) OVER(ORDER BY lt_num) prev_send_id,
              LAG(lt_receiver_id,1) OVER(ORDER BY lt_num) prev_receiver_id,
              LAG(lt_date,1) OVER(ORDER BY lt_num) prev_date,
	          LAG(lt_read,1) OVER(ORDER BY lt_num) prev_read,
              LEAD(lt_num,1) OVER(ORDER BY lt_num) next_num,
              LEAD(lt_title,1) OVER(ORDER BY lt_num) next_title,
              LEAD(lt_sender_id,1) OVER(ORDER BY lt_num) next_send_id,
              LEAD(lt_receiver_id,1) OVER(ORDER BY lt_num) next_receiver_id,
              LEAD(lt_date,1) OVER(ORDER BY lt_num) next_date,
              LEAD(lt_read,1) OVER(ORDER BY lt_num) next_read
                
             FROM tta 
         	)
         WHERE lt_num=#{lt_num}
	</select>
	
	<!-- 내게쓴쪽지함 카운트 -->
	<select id="selectMyRowCount" parameterType="map" resultType="integer">
		SELECT
		  COUNT(*)
		FROM
		  letter_send
		WHERE
		  lt_sender_num=#{mem_num} AND lt_receiver_num=#{lt_receiver_num} AND lt_delete=0
	</select>
	
	<!-- 내게쓴쪽지함 리스트 -->
	<select id="selectMyList" parameterType="map" resultType="letterVO">
		SELECT 
			*
		FROM
			(SELECT
				rownum rnum,
				a.*
			FROM
		  		(SELECT
		  			lt_num,
		  			lt_sender_num,
		  			lt_receiver_num,
                    <![CDATA[
			  		REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
			  		]]>
		        	lt_date,
			        lt_sender_id,
			        (SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id = s.lt_receiver_id) || '('|| lt_receiver_id || ')' AS lt_receiver_id,
			        lt_content,
			        lt_important,
			        lt_read,
			        lt_delete
		  		FROM
		  			letter_send s
		  		WHERE
		  			lt_sender_num=#{mem_num} AND lt_receiver_num=#{lt_receiver_num} AND lt_delete=0
		  		ORDER BY lt_date DESC)a)
		
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]> 
	</select>
	
	<!-- 내게쓴쪽지함 이전다음글 -->
	<select id="selectMyNP" parameterType="map" resultType="nextPrevVO">
		WITH tta AS
			(
			SELECT
	  			lt_num,
	  			lt_sender_num,
	  			lt_receiver_num,
		  		<![CDATA[
		  		REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
		  		]]>
	        	lt_date,
		        lt_sender_id,
		        (SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id = s.lt_receiver_id) || '('|| lt_receiver_id || ')' AS lt_receiver_id,
		        lt_content,
		        lt_delete,
		        lt_read
	  		FROM
	  			letter_send s
	  		WHERE
	  			lt_sender_num=#{mem_num} AND lt_receiver_num=#{lt_receiver_num} AND lt_delete=0
	  		)
	  		
         SELECT * FROM
         	(
             SELECT
              lt_num,
              LAG(lt_num,1) OVER(ORDER BY lt_num) prev_num,
              LAG(lt_title,1) OVER(ORDER BY lt_num) prev_title,
              LAG(lt_sender_id,1) OVER(ORDER BY lt_num) prev_send_id,
              LAG(lt_receiver_id,1) OVER(ORDER BY lt_num) prev_receiver_id,
              LAG(lt_date,1) OVER(ORDER BY lt_num) prev_date,
	          LAG(lt_read,1) OVER(ORDER BY lt_num) prev_read,
              LEAD(lt_num,1) OVER(ORDER BY lt_num) next_num,
              LEAD(lt_title,1) OVER(ORDER BY lt_num) next_title,
              LEAD(lt_sender_id,1) OVER(ORDER BY lt_num) next_send_id,
              LEAD(lt_receiver_id,1) OVER(ORDER BY lt_num) next_receiver_id,
              LEAD(lt_date,1) OVER(ORDER BY lt_num) next_date,
	          LEAD(lt_read,1) OVER(ORDER BY lt_num) next_read
                
             FROM tta 
         	)
         WHERE lt_num=#{lt_num}
	</select>
	
	<!-- 중요쪽지함 카운트 -->
	<select id="selectImportantRowCount" parameterType="map" resultType="integer">
		SELECT
			COUNT(*)
		FROM
		   (SELECT 
		   		lt_sender_id,
		   		(SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id = SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1))) || '('|| SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1)) || ')' AS lt_receiver_id,
		   		lt_title,
		   		lt_content,
		   		lt_important,
		   		lt_delete
		    FROM
		    	letter_send s
		    WHERE
		    	lt_sender_num=#{mem_num} AND lt_important=1 AND lt_delete=0
		    
		    UNION ALL 
		    
		   	SELECT
		   		(SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id =r.lt_sender_id) || '('|| lt_sender_id || ')' AS lt_sender_id,
		   		lt_receiver_id,
		   		lt_title,
		   		lt_content,
		   		lt_important,
		   		lt_delete
		    FROM
		    	letter_receive r
		    WHERE
		    	lt_receiver_num=#{mem_num} AND lt_important=1 AND lt_delete=0)
	</select>
	
	<!-- 중요쪽지함 리스트 -->
	<select id="selectImportantList" parameterType="map" resultType="letterVO">
		SELECT 
			*
		FROM
			(SELECT
				rownum rnum,
				a.*
			FROM
				(SELECT
				   *
				 FROM
			   		(SELECT
			   			lt_num AS lt_num,
			   			lt_sender_num,
			   			lt_receiver_num,
			   			<![CDATA[
			   			REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
			   			]]>
			            lt_date,
			            lt_sender_id,
		      			(SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id = SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1))) || '('|| SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1)) || ')' AS lt_receiver_id,
				        lt_content,
				        lt_important,
						lt_read,
						lt_delete
			    	FROM
			    		letter_send s
			     	WHERE
			     		lt_sender_num=#{mem_num} AND lt_important=1 AND lt_delete=0
			     		
			      	UNION ALL 
			      	
			  		SELECT
			  			snum AS lt_num,
			  			lt_sender_num,
			  			TO_CHAR(lt_receiver_num) AS lt_receiver_num,
			  			<![CDATA[
			  			REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
			  			]]>
			        	lt_date,
				        (SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id =r.lt_sender_id) || '('|| lt_sender_id || ')' AS lt_sender_id,
				        (SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id =r.lt_receiver_id) || '('|| lt_receiver_id || ')' AS lt_receiver_id,
				        lt_content,
				        lt_important,
				        lt_read,
				        lt_delete
			  		FROM
			  			letter_receive r
			  		WHERE
			  			lt_receiver_num=#{mem_num} AND lt_sender_num!=#{mem_num} AND lt_important=1 AND lt_delete=0) 
			   ORDER BY lt_date DESC)a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]> 
	</select>
	
	<!-- 중요쪽지함 이전다음글 -->
	<select id="selectImportantNP" parameterType="map" resultType="nextPrevVO">
		WITH tta AS
		(
          SELECT
            *
           FROM
             (SELECT
              	lt_num AS lt_num,
                <![CDATA[
	  			REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
	  			]]>
                lt_date,
                lt_sender_id,
                (SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id = SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1))) || '('|| SUBSTR(s.lt_receiver_id,0,DECODE(INSTR(s.lt_receiver_id,','),0,LENGTH(s.lt_receiver_id),INSTR(s.lt_receiver_id,',')-1)) || ')' AS lt_receiver_id,
                lt_important,
                lt_delete,
                lt_read
              FROM
                letter_send s
              WHERE
                lt_sender_num=#{mem_num} AND lt_important=1 AND lt_delete=0
                
              UNION ALL 
              
              SELECT
                snum AS lt_num,
                <![CDATA[
	  			REPLACE(REPLACE(lt_title,'<','&lt;'),'>','&gt;') AS lt_title,
	  			]]>
                lt_date,
                (SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id =r.lt_sender_id) || '('|| lt_sender_id || ')' AS lt_sender_id,
                lt_receiver_id,
                lt_important,
                lt_delete,
                lt_read
              FROM
                letter_receive r
              WHERE
                lt_receiver_num=#{mem_num} AND lt_important=1 AND lt_delete=0) 
          )
               
           SELECT * FROM(
               SELECT
	               lt_num,
	               LAG(lt_num,1) OVER(ORDER BY lt_num) prev_num,
	               LAG(lt_title,1) OVER(ORDER BY lt_num) prev_title,
	               LAG(lt_sender_id,1) OVER(ORDER BY lt_num) prev_send_id,
	               LAG(lt_receiver_id,1) OVER(ORDER BY lt_num) prev_receiver_id,
	               LAG(lt_date,1) OVER(ORDER BY lt_num) prev_date,
	               LAG(lt_read,1) OVER(ORDER BY lt_num) prev_read,
	               LEAD(lt_num,1) OVER(ORDER BY lt_num) next_num,
	               LEAD(lt_title,1) OVER(ORDER BY lt_num) next_title,
	               LEAD(lt_sender_id,1) OVER(ORDER BY lt_num) next_send_id,
	               LEAD(lt_receiver_id,1) OVER(ORDER BY lt_num) next_receiver_id,
	               LEAD(lt_date,1) OVER(ORDER BY lt_num) next_date,
	               LEAD(lt_read,1) OVER(ORDER BY lt_num) next_read
               FROM tta 
               )
           WHERE lt_num=#{lt_num}
	</select>
	
	<!-- 상세페이지 기본정보 -->
	<select id="selectLetter" parameterType="integer" resultType="letterVO">
		SELECT 
		    lt_num,
		    lt_title,
		    lt_sender_num,
		    lt_receiver_num,
		    lt_date,
		    lt_content,
		    lt_read,
		    lt_important,
		    lt_uploadfile1,
		    lt_uploadfile2,
		    lt_filename1,
		    lt_filename2,
		    (SELECT mem_name FROM member m JOIN member_detail d USING(mem_num) WHERE m.mem_id = s.lt_sender_id) || '(' || lt_sender_id || ')' as lt_sender_id,
		    lt_receiver_id,
		    lt_reference_id
		FROM letter_send s WHERE lt_num=#{lt_num}
	</select>
	
	<!-- 상세페이지 이름가져오기 -->
	<select id="selectName" resultType="letterVO">
		SELECT 
		    M.MEM_ID,
		    MD.MEM_NAME
		FROM
		    MEMBER M,
		    MEMBER_DETAIL MD
		WHERE M.MEM_NUM = MD.MEM_NUM
		    AND M.MEM_ID IN (
			   	<foreach item="item" collection="rids" separator=",">
	  				#{item}
			   	</foreach>
		    )
	</select>
	
	
</mapper>







